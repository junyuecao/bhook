plugins {
    id 'com.android.library'
}

android {
    namespace 'com.sohook'
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // NDK配置
        ndk {
            abiFilters rootProject.ext.abiFilters.split(",")
        }

        // CMake配置
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++11'
                arguments '-DANDROID_STL=c++_shared'
            }
        }
    }

    // 配置CMake路径
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
            version rootProject.ext.cmakeVersion
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    // 配置prefab以使用bytehook
    buildFeatures {
        prefab true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    
    // 依赖bytehook库
    implementation project(':bytehook')
    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

// 应用 prefab bypass 配置（支持 shadowhook 依赖）
apply from: rootProject.file('gradle/prefab_bypass.gradle')